
name: Auto-publish Artifacts in Azure

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
    branches:
      - master
    paths:
      - 'dist*/*Artifacts*.zip'

jobs:
  find-publicationdir-and-channel:
    runs-on: ubuntu-latest
    outputs:
      channel: ${{ steps.regexparsing.outputs.channel }}
      publicationdirectory: ${{ steps.regexparsing.outputs.publicationdirectory }}
    steps:
      - id: files
        uses: jitterbit/get-changed-files@v1
      - id: regexparsing
        run: |
          [[ ${{ steps.files.outputs.added_modified }} =~ ([a-z-]+)\/[a-zA-Z-]*Artifacts-?([a-zA-Z]*)\.zip ]]
          # echo "publicationdirectory=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          echo "::set-output name=publicationdirectory::${BASH_REMATCH[1]}"
          if [ "${BASH_REMATCH[2]}" == "" ]; then
            echo "::set-output name=channel::prod"
          else
            echo "::set-output name=channel::${BASH_REMATCH[2]}" | tr 'A-Z' 'a-z'
          fi

  # release-in-azure:
  #   uses: ./.github/workflows/release-in-azure.yml
  #   with:
  #     channel: ${{needs.find-publicationdir-and-channel.outputs.channel}}
  #     publicationdirectory: ${{needs.find-publicationdir-and-channel.outputs.publicationdirectory}}
  #   permissions:
  #     id-token: write
  #     contents: read
  #   needs: find-publicationdir-and-channel
  #   secrets:
  #     AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  #     AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}


# Copy and Paste from release-in-azure.yml with a small modification to get the input from the other job

  release-in-azure:
    environment: AzureC4A8
    runs-on: ubuntu-latest
    needs: find-publicationdir-and-channel
    permissions:
      id-token: write
      contents: read    
    steps:
      - name: Find file name of Artifact to Publish
        uses: kanga333/variable-mapper@master
        with:
          key: "${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }}-${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          map: |
            {
              "dist-prod": {
                "publicationfile": "Artifacts.zip"
              },
              "dist-beta": {
                "publicationfile": "Artifacts-Beta.zip"
              },
              "dist-intern(al)?": {
                "publicationfile": "Artifacts-Intern.zip"
              },
              "dist-certmaster-prod": {
                "publicationfile": "CertMaster-Artifacts.zip"
              },
              "dist-certmaster-beta": {
                "publicationfile": "CertMaster-Artifacts-Beta.zip"
              },
              "dist-certmaster-intern(al)?": {
                "publicationfile": "CertMaster-Artifacts-Intern.zip"
              }
            }

      - name: Print what we have found so far (Debug)
        run: |
          echo "Selected directory ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }} in channel ${{ needs.find-publicationdir-and-channel.outputs.channel }}"
          echo "File to publish is ${{ env.publicationfile }}"

      - name: Check Input
        if: ${{ env.publicationfile == '' }}
        run: exit 1

      - name: Checkout
        uses: actions/checkout@v3

      - name: Log in with Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - name: Copy file to Blob Storage
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload --auth-mode login --overwrite -f ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }}/${{ env.publicationfile }} --account-name scepmanartifactsinstall --container-name ${{ needs.find-publicationdir-and-channel.outputs.publicationdirectory }} --name ${{ env.publicationfile }}