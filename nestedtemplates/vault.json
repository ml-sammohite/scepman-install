{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Specifies the name of the key vault."
      }
    },
    "permittedPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "IDs of SCEPman app service principal, whom will be assigned permissions to the KV"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Region in which to create the key vault."
      }
    },
    "resourceTags": {
      "type": "object",
      "metadata": {
        "description": "Tags to be assigned to the created resources"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Virtual Network to associate with the key vault."
      }
    },
    "networkInterfaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the network interface to be created for the key vault."
      }
    },
    "privateEndpointName": {
      "type": "string",
      "metadata": {
        "description": "Name of the private endpoint to be created for the key vault."
      }
    },
    "privateDnsZoneName": {
      "type": "string",
      "metadata": {
        "description": "Name of the private DNS zone to be created for the key vault."
      }
    }
  },
  "variables": {
    "keys": [
      "Get",
      "Create",
      "UnwrapKey",
      "Sign"
    ],
    "secrets": [
      "Get",
      "List",
      "Set",
      "Delete"
    ],
    "certificates": [
      "Get",
      "List",
      "Create",
      "ManageContacts"
    ]
  },
  "resources": [
    {
      "apiVersion": "2022-07-01",
      "type": "Microsoft.KeyVault/vaults",
      "name": "[parameters('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForTemplateDeployment": false,
        "enablePurgeProtection": true,
        "enableSoftDelete": true,
        "enabledForDiskEncryption": false,
        "sku": {
          "name": "premium",
          "family": "A"
        },
        "networkAcls": {
            "bypass": "None",
            "defaultAction": "Deny",
        },
        "accessPolicies": [
          {
            "objectId": "[parameters('permittedPrincipalId')]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "keys": "[variables('keys')]",
              "secrets": "[variables('secrets')]",
              "certificates": "[variables('certificates')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[parameters('privateDnsZoneName')]",
      "location": "Global",
      "tags": "[parameters('resourceTags')]",
      "properties": {}
    },
    {
      "apiVersion": "2022-07-01",
      "type": "Microsoft.Network/privateEndpoints",
      "name": "[parameters('privateEndpointName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "subnet": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'default')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "keyVault",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
              "groupIds": [
                "vault"
              ],
              "privateLinkServiceConnectionState": {
                "status": "Approved",
                "description": "Private endpoint connection approved",
                "actionsRequired": "None"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[parameters('keyVaultName')]",
        "[parameters('networkInterfaceName')]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-06-01",
      "name": "[concat(parameters('privateEndpointName'), '/default')]",
      "dependsOn": [
          "[parameters('privateEndpointName')]", "[parameters('privateDnsZoneName')]"
      ],
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "[parameters('privateDnsZoneName')]",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZoneName'))]" // ToDo: has invalid private dns zone ids . (Code: InvalidPrivateDnsZoneIds)
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[concat(parameters('privateDnsZoneName'), '/', parameters('keyVaultName'), '-link')]",
      "location": "global",
      "properties": {
        "registrationEnabled": false,
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
        }
      },
      "dependsOn": [
        "[parameters('privateDnsZoneName')]"
      ]
    }
  ],
  "outputs": {
    "keyVaultURL": {
      "type": "string",
      "value": "[reference(parameters('keyVaultName')).vaultUri]"
    }
  }
}